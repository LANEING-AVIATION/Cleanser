% 系数向量（目标函数的权重）
f = [-193, -191, -187, -186, -180, -185];  % 由于intlinprog默认是最小化问题，所以我们对系数取负号

% 约束矩阵和右侧的常数向量
A = [
    0, 0, 0, 0, -1, -1;  % x5 + x6 >= 1 -> -x5 - x6 <= -1
    0, 0, -1, 0, -1, 0;  % x3 + x5 >= 1 -> -x3 - x5 <= -1
    1, 1, 0, 0, 0, 0;    % x1 + x2 <= 1
    0, 1, 0, 0, 0, 1;    % x6 + x2 <= 1
    0, 0, 0, 1, 0, 1     % x6 + x4 <= 1
];
b = [-1; -1; 1; 1; 1];

% 等式约束
Aeq = [1, 1, 1, 1, 1, 1];  % x1 + x2 + x3 + x4 + x5 + x6 = 3
beq = 3;

% 变量上下界（0-1变量）
lb = zeros(6,1);  % 下界
ub = ones(6,1);   % 上界

% 定义整数变量的位置（1表示整数变量）
intcon = 1:6;

% 使用intlinprog函数求解0-1规划问题
[x, fval] = intlinprog(f, intcon, A, b, Aeq, beq, lb, ub);

% 输出结果
disp('Optimal solution:');
disp(x');

disp('Maximum objective value:');
disp(-fval);  % 因为之前目标函数是负的，所以这里要再取负还原
